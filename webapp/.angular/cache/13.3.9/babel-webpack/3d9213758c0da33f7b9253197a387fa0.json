{"ast":null,"code":"/*\n * Copyright (c) 2021 Be The Match.\n *\n * This file is part of BLEAT\n * (see https://github.com/nmdp-bioinformatics/b-leader).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nimport { EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@app/core/services/subjects/subjects.service\";\nimport * as i3 from \"@app/core/services/import/import.service\";\nimport * as i4 from \"ngx-papaparse\";\nimport * as i5 from \"@angular/material/table\";\nimport * as i6 from \"@angular/common\";\n\nfunction ImportDialogComponent_th_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 19);\n    i0.ɵɵtext(1, \"Patient ID\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ImportDialogComponent_td_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r15 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r15.patID);\n  }\n}\n\nfunction ImportDialogComponent_th_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 19);\n    i0.ɵɵtext(1, \"Patient \");\n    i0.ɵɵelementStart(2, \"i\");\n    i0.ɵɵtext(3, \"HLA-B\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" Type 1\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ImportDialogComponent_td_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r16 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r16.patHlaB1);\n  }\n}\n\nfunction ImportDialogComponent_th_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 19);\n    i0.ɵɵtext(1, \"Patient \");\n    i0.ɵɵelementStart(2, \"i\");\n    i0.ɵɵtext(3, \"HLA-B\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" Type 2\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ImportDialogComponent_td_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r17 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r17.patHlaB2);\n  }\n}\n\nfunction ImportDialogComponent_th_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 19);\n    i0.ɵɵtext(1, \"Donor ID\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ImportDialogComponent_td_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r18 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r18.donID);\n  }\n}\n\nfunction ImportDialogComponent_th_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 19);\n    i0.ɵɵtext(1, \"Donor \");\n    i0.ɵɵelementStart(2, \"i\");\n    i0.ɵɵtext(3, \"HLA-B\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" Type 1\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ImportDialogComponent_td_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r19 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r19.donHlaB1);\n  }\n}\n\nfunction ImportDialogComponent_th_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 19);\n    i0.ɵɵtext(1, \"Donor \");\n    i0.ɵɵelementStart(2, \"i\");\n    i0.ɵɵtext(3, \"HLA-B\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" Type 2\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ImportDialogComponent_td_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r20 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r20.donHlaB2);\n  }\n}\n\nfunction ImportDialogComponent_tr_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 21);\n  }\n}\n\nfunction ImportDialogComponent_tr_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 22);\n  }\n}\n\nfunction ImportDialogComponent_div_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" There are \", ctx_r14.data.dataRows == null ? null : ctx_r14.data.dataRows.length, \" rows in this file. Due to technical limitations, only the first \", ctx_r14.limit, \" rows will be shown. Calculations for the first \", ctx_r14.limit, \" rows occur automatically. You will be alerted when these are finished. Next, press export to continue calculations for the rest of the rows. An annotated file will download at 100%. \");\n  }\n}\n\nconst _c0 = \"button[_ngcontent-%COMP%]{width:55px;height:20px;margin:5px;font-size:12px;float:left;text-align:center;border:0px}[_nghost-%COMP%]{text-align:center}.option[_ngcontent-%COMP%]{border:1px solid black;background-color:#fff;height:25vh;color:#000;padding:15px;border-radius:1%;text-align:left}textarea[_ngcontent-%COMP%]{margin:10px;border:1px solid black}.centered[_ngcontent-%COMP%]{font-size:12px;margin:auto}input[_ngcontent-%COMP%]{margin:10px}mat-form-field[_ngcontent-%COMP%]{width:800px;margin-right:25px}.mat-header-cell[_ngcontent-%COMP%], .mat-cell[_ngcontent-%COMP%]{padding:10px;max-width:200px;overflow:scroll;background-color:#fff;color:#000}h3[_ngcontent-%COMP%]{text-align:center}table.mat-table[_ngcontent-%COMP%]{margin:auto}a[_ngcontent-%COMP%]{color:#fff}ul[_ngcontent-%COMP%]{text-align:left}.help[_ngcontent-%COMP%]{height:25vh;overflow-y:scroll;font-size:12px}.dialog-import[_ngcontent-%COMP%]{height:25px;width:50px;float:left;margin-left:0;margin-right:10px}.overflow-warning[_ngcontent-%COMP%]{width:calc(100% - 60px);height:60px;overflow-y:scroll;font-size:12px}\";\nexport let ImportButtonComponent = /*#__PURE__*/(() => {\n  class ImportButtonComponent {\n    constructor(dialog, subjectsService, importService) {\n      this.dialog = dialog;\n      this.subjectsService = subjectsService;\n      this.importService = importService;\n      this.sortList = new EventEmitter();\n      this.displayedColumns = [\"patID\", \"patHlaB1\", \"patHlaB2\", \"donID\", \"donHlaB1\", \"donHlaB2\"];\n    }\n\n    ngOnInit() {}\n\n    import() {\n      const dialogRef = this.dialog.open(ImportDialogComponent, {\n        data: {\n          dataRows: this.dataRows,\n          displayedColumns: this.displayedColumns\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        this.dataRows = result;\n\n        if (this.dataRows) {\n          this._setSubjects();\n        }\n      });\n    }\n\n    _setSubjects() {\n      this.importService.formatSubjects(this.dataRows, this.patient, this.donors);\n\n      if (this.patient.length == 1 && this.patient[0].allotypes[0].hlaB != \"\") {\n        this.sortList.emit();\n      }\n    }\n\n  }\n\n  ImportButtonComponent.ɵfac = function ImportButtonComponent_Factory(t) {\n    return new (t || ImportButtonComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.SubjectsService), i0.ɵɵdirectiveInject(i3.ImportService));\n  };\n\n  ImportButtonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ImportButtonComponent,\n    selectors: [[\"app-import-button\"]],\n    inputs: {\n      patient: \"patient\",\n      donors: \"donors\"\n    },\n    outputs: {\n      sortList: \"sortList\"\n    },\n    decls: 2,\n    vars: 0,\n    consts: [[\"tabindex\", \"-1\", 3, \"click\"]],\n    template: function ImportButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function ImportButtonComponent_Template_button_click_0_listener() {\n          return ctx.import();\n        });\n        i0.ɵɵtext(1, \"Import\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [_c0]\n  });\n  return ImportButtonComponent;\n})();\nexport let ImportDialogComponent = /*#__PURE__*/(() => {\n  class ImportDialogComponent {\n    constructor(dialogRef, papa, importService, data) {\n      this.dialogRef = dialogRef;\n      this.papa = papa;\n      this.importService = importService;\n      this.data = data;\n    }\n\n    ngOnInit() {\n      this.limit = this.importService.getLimit();\n    }\n\n    handleFileInput($event) {\n      const file = $event.target.files[0];\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        this.papa.parse(reader.result.toString(), {\n          skipEmptyLines: true,\n          // header: true,\n          complete: result => {\n            this.data.dataRows = this.importService.parseRows(result['data']);\n            let hasPatient = this.data.dataRows[0].hasOwnProperty('patHlaB1');\n\n            if (hasPatient) {\n              this.importService.setAsImporting(true);\n            }\n          }\n        });\n      };\n\n      reader.readAsText(file);\n    }\n\n  }\n\n  ImportDialogComponent.ɵfac = function ImportDialogComponent_Factory(t) {\n    return new (t || ImportDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i4.Papa), i0.ɵɵdirectiveInject(i3.ImportService), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n\n  ImportDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ImportDialogComponent,\n    selectors: [[\"app-import-dialog\"]],\n    decls: 59,\n    vars: 5,\n    consts: [[\"mat-dialog-title\", \"\"], [1, \"help\"], [1, \"centered\"], [\"type\", \"file\", \"accept\", \".csv\", 3, \"change\"], [\"mat-dialog-content\", \"\", 1, \"option\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"patID\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"patHlaB1\"], [\"matColumnDef\", \"patHlaB2\"], [\"matColumnDef\", \"donID\"], [\"matColumnDef\", \"donHlaB1\"], [\"matColumnDef\", \"donHlaB2\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", 1, \"dialog-import\", 3, \"mat-dialog-close\"], [\"class\", \"overflow-warning\", 4, \"ngIf\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"], [1, \"overflow-warning\"]],\n    template: function ImportDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\", 0);\n        i0.ɵɵtext(1, \"Import\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"p\");\n        i0.ɵɵtext(4, \"You will need to provide several columns with 'B*' prefixes. Header names are expected but can be any value. These are the configurations:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"ul\")(6, \"li\");\n        i0.ɵɵtext(7, \"multiple donors (two \");\n        i0.ɵɵelementStart(8, \"i\");\n        i0.ɵɵtext(9, \"HLA-B\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(10, \" columns)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"li\");\n        i0.ɵɵtext(12, \"one patient with multiple donors (four \");\n        i0.ɵɵelementStart(13, \"i\");\n        i0.ɵɵtext(14, \"HLA-B\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(15, \" columns; first two columns contain only one row)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"li\");\n        i0.ɵɵtext(17, \"multiple patient-donor pairs (four filled \");\n        i0.ɵɵelementStart(18, \"i\");\n        i0.ɵɵtext(19, \"HLA-B\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(20, \" columns)\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"p\");\n        i0.ɵɵtext(22, \"Non-\");\n        i0.ɵɵelementStart(23, \"i\");\n        i0.ɵɵtext(24, \"HLA-B\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(25, \" columns will be treated as IDs. You may include 0, 1, or 2 of these columns.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"div\", 2)(27, \"span\")(28, \"b\");\n        i0.ɵɵtext(29, \"Upload your .csv dataset here\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"input\", 3);\n        i0.ɵɵlistener(\"change\", function ImportDialogComponent_Template_input_change_30_listener($event) {\n          return ctx.handleFileInput($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"div\", 4)(32, \"h3\");\n        i0.ɵɵtext(33, \"Data Preview\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"table\", 5);\n        i0.ɵɵelementContainerStart(35, 6);\n        i0.ɵɵtemplate(36, ImportDialogComponent_th_36_Template, 2, 0, \"th\", 7);\n        i0.ɵɵtemplate(37, ImportDialogComponent_td_37_Template, 2, 1, \"td\", 8);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(38, 9);\n        i0.ɵɵtemplate(39, ImportDialogComponent_th_39_Template, 5, 0, \"th\", 7);\n        i0.ɵɵtemplate(40, ImportDialogComponent_td_40_Template, 2, 1, \"td\", 8);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(41, 10);\n        i0.ɵɵtemplate(42, ImportDialogComponent_th_42_Template, 5, 0, \"th\", 7);\n        i0.ɵɵtemplate(43, ImportDialogComponent_td_43_Template, 2, 1, \"td\", 8);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(44, 11);\n        i0.ɵɵtemplate(45, ImportDialogComponent_th_45_Template, 2, 0, \"th\", 7);\n        i0.ɵɵtemplate(46, ImportDialogComponent_td_46_Template, 2, 1, \"td\", 8);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(47, 12);\n        i0.ɵɵtemplate(48, ImportDialogComponent_th_48_Template, 5, 0, \"th\", 7);\n        i0.ɵɵtemplate(49, ImportDialogComponent_td_49_Template, 2, 1, \"td\", 8);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(50, 13);\n        i0.ɵɵtemplate(51, ImportDialogComponent_th_51_Template, 5, 0, \"th\", 7);\n        i0.ɵɵtemplate(52, ImportDialogComponent_td_52_Template, 2, 1, \"td\", 8);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(53, ImportDialogComponent_tr_53_Template, 1, 0, \"tr\", 14);\n        i0.ɵɵtemplate(54, ImportDialogComponent_tr_54_Template, 1, 0, \"tr\", 15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(55, \"div\", 16)(56, \"button\", 17);\n        i0.ɵɵtext(57, \"Import\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(58, ImportDialogComponent_div_58_Template, 2, 3, \"div\", 18);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(34);\n        i0.ɵɵproperty(\"dataSource\", ctx.data.dataRows == null ? null : ctx.data.dataRows.slice(0, 50));\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.data.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.data.displayedColumns);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"mat-dialog-close\", ctx.data.dataRows);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", (ctx.data.dataRows == null ? null : ctx.data.dataRows.length) > ctx.limit);\n      }\n    },\n    directives: [i1.MatDialogTitle, i1.MatDialogContent, i5.MatTable, i5.MatColumnDef, i5.MatHeaderCellDef, i5.MatHeaderCell, i5.MatCellDef, i5.MatCell, i5.MatHeaderRowDef, i5.MatHeaderRow, i5.MatRowDef, i5.MatRow, i1.MatDialogActions, i1.MatDialogClose, i6.NgIf],\n    styles: [_c0]\n  });\n  return ImportDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}