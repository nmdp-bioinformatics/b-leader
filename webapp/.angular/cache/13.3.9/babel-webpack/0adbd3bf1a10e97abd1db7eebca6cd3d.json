{"ast":null,"code":"/*\n * Copyright (c) 2021 Be The Match.\n *\n * This file is part of BLEAT\n * (see https://github.com/nmdp-bioinformatics/b-leader).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nimport { EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../genotype/genotype.component\";\nimport * as i4 from \"../../../modules/b-leader/matching-status/matching-status.component\";\n\nfunction SubjectRowComponent_img_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"img\", 6);\n    i0.ɵɵlistener(\"click\", function SubjectRowComponent_img_2_Template_img_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.remove();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SubjectRowComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelement(1, \"app-matching-status\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"patient\", ctx_r1.patient)(\"initiatedMatching\", ctx_r1.initiatedMatching)(\"subject\", ctx_r1.subject);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"move-to-donor\": a0\n  };\n};\n\nexport let SubjectRowComponent = /*#__PURE__*/(() => {\n  class SubjectRowComponent {\n    constructor() {\n      this.notifyMovedPatientGenotype = new EventEmitter();\n      this.removeSubject = new EventEmitter();\n      this.initiatedMatching = false;\n      this.id = new FormControl();\n    }\n\n    ngOnInit() {\n      this.id.setValue(this.subject.id);\n\n      this._trackID();\n    }\n\n    _trackID() {\n      this.id.valueChanges.subscribe(val => {\n        this.subject.id = val;\n      });\n    }\n\n    bringPatientGenotype(moveTowards) {\n      this.movedPatientGenotype = moveTowards;\n      this.notifyMovedPatientGenotype.emit(moveTowards);\n    }\n\n    remove() {\n      this.removeSubject.emit(this.index);\n    }\n\n    initiatedMatchingAssignment() {\n      this.initiatedMatching = true;\n    }\n\n  }\n\n  SubjectRowComponent.ɵfac = function SubjectRowComponent_Factory(t) {\n    return new (t || SubjectRowComponent)();\n  };\n\n  SubjectRowComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SubjectRowComponent,\n    selectors: [[\"app-subject-row\"]],\n    inputs: {\n      patient: \"patient\",\n      index: \"index\",\n      flippedPatient: \"flippedPatient\",\n      subjects: \"subjects\",\n      subject: \"subject\",\n      matchParadigm: \"matchParadigm\",\n      leaderMap: \"leaderMap\",\n      movedPatientGenotype: \"movedPatientGenotype\",\n      selectIndex: \"selectIndex\"\n    },\n    outputs: {\n      notifyMovedPatientGenotype: \"notifyMovedPatientGenotype\",\n      removeSubject: \"removeSubject\"\n    },\n    decls: 6,\n    vars: 15,\n    consts: [[1, \"id\"], [\"tabindex\", \"-1\", \"type\", \"text\", 3, \"formControl\"], [\"class\", \"delete-button\", \"src\", \"/assets/img/delete-button.png\", \"alt\", \"delete-button\", \"tabindex\", \"-1\", 3, \"click\", 4, \"ngIf\"], [1, \"genotype\"], [3, \"index\", \"ngClass\", \"movedPatientGenotype\", \"flippedPatient\", \"patient\", \"subject\", \"subjects\", \"selectIndex\", \"multiple\", \"leaderMap\", \"initiatedMatching\"], [\"class\", \"matching-status\", 4, \"ngIf\"], [\"src\", \"/assets/img/delete-button.png\", \"alt\", \"delete-button\", \"tabindex\", \"-1\", 1, \"delete-button\", 3, \"click\"], [1, \"matching-status\"], [3, \"patient\", \"initiatedMatching\", \"subject\"]],\n    template: function SubjectRowComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"input\", 1);\n        i0.ɵɵtemplate(2, SubjectRowComponent_img_2_Template, 1, 0, \"img\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"app-genotype\", 4);\n        i0.ɵɵlistener(\"initiatedMatching\", function SubjectRowComponent_Template_app_genotype_initiatedMatching_4_listener() {\n          return ctx.initiatedMatchingAssignment();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(5, SubjectRowComponent_div_5_Template, 2, 3, \"div\", 5);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formControl\", ctx.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.subjects.length > 1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"index\", ctx.index)(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ctx.subject.type == \"patient\" && ctx.movedPatientGenotype))(\"movedPatientGenotype\", ctx.movedPatientGenotype)(\"flippedPatient\", ctx.flippedPatient)(\"patient\", ctx.patient)(\"subject\", ctx.subject)(\"subjects\", ctx.subjects)(\"selectIndex\", ctx.selectIndex)(\"multiple\", ctx.subjects.length > 1)(\"leaderMap\", ctx.leaderMap);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.subject.type == \"donor\");\n      }\n    },\n    directives: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlDirective, i2.NgIf, i3.GenotypeComponent, i2.NgClass, i4.MatchingStatusComponent],\n    styles: [\"[_nghost-%COMP%]{width:100%;height:80px;float:left;border-bottom:1px solid #9AA3A8;position:relative;scroll-snap-align:start;-webkit-transition:background-color 1s;-moz-transition:background-color 1s}.genotype[_ngcontent-%COMP%]{width:190px}.matching-status[_ngcontent-%COMP%]{width:130px}[_nghost-%COMP%] > div[_ngcontent-%COMP%]{height:80px;border-left:1px solid #9AA3A8;float:left}[_nghost-%COMP%] > div.id[_ngcontent-%COMP%]{border-left:0px;width:100px}input[_ngcontent-%COMP%]{padding:5px;width:67px;height:11px;font-size:12px;z-index:0;float:left;margin:13px 10px}button[_ngcontent-%COMP%]{border-radius:50%;width:20px;height:20px;line-height:20px;font-size:20px;padding:0;background-color:gray;color:#fff;position:absolute;margin-left:60.5px;margin-top:-11.5px;z-index:99}.view-icon[_ngcontent-%COMP%]{height:15px;margin:33px 5px}.delete-button[_ngcontent-%COMP%]{height:8px;margin:10px -15px;position:absolute;background-color:#fff}\"]\n  });\n  return SubjectRowComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}