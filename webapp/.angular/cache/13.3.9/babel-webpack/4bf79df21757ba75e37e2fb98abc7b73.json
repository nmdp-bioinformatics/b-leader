{"ast":null,"code":"/*\n * Copyright (c) 2021 Be The Match.\n *\n * This file is part of BLEAT\n * (see https://github.com/nmdp-bioinformatics/b-leader).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nimport { Allotype } from '@app/shared/models/allotype/allotype.model';\nexport class Subject {\n  constructor(hlaBallotypes, type, id, index) {\n    this.leaderGenotype = null;\n    this.leaderMatch = [\"\", \"\", \"\"];\n    this.hlaBMatch = [\"\", \"\"];\n    this.sharedAllotype = null;\n    this.flippedPatient = false;\n    this.flippedDonor = false;\n    this.loading = false;\n    this.rank = 0;\n    this.annotated = false;\n    this.allotypes = hlaBallotypes.map(allo => new Allotype(allo));\n    this.type = type;\n    this.id = id;\n    this.index = index;\n  }\n\n  setHlaBAllotypes(hlaBallotypes) {\n    for (var i = 0; i < this.allotypes.length; i++) {\n      this.allotypes[i].hlaB = hlaBallotypes[i];\n    }\n  }\n\n  getLeaderAllotypes() {\n    if (this.leaderGenotype) {\n      return this.leaderGenotype;\n    } else {\n      return this.allotypes.map(function (allotype) {\n        return allotype.leader;\n      }).join('');\n    }\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}