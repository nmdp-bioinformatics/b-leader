{"ast":null,"code":"/*\n * Copyright (c) 2021 Be The Match.\n *\n * This file is part of BLEAT\n * (see https://github.com/nmdp-bioinformatics/b-leader).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nimport { EventEmitter } from '@angular/core';\nimport { SubjectRowComponent } from '@app/shared/components/subject-row/subject-row.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/core/services/subjects/subjects.service\";\nimport * as i2 from \"@app/core/services/import/import.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../subject-row/subject-row.component\";\nimport * as i5 from \"../../../modules/b-leader/patient-panel/patient-panel.component\";\nconst _c0 = [\"content\"];\n\nfunction SubjectColumnComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelement(1, \"img\", 8);\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\n\nfunction SubjectColumnComponent_app_subject_row_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-subject-row\", 9);\n    i0.ɵɵlistener(\"notifyMovedPatientGenotype\", function SubjectColumnComponent_app_subject_row_3_Template_app_subject_row_notifyMovedPatientGenotype_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.emitMovedPatientGenotype($event);\n    })(\"removeSubject\", function SubjectColumnComponent_app_subject_row_3_Template_app_subject_row_removeSubject_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.removeSubject($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const subject_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(10, _c1, i_r7 == ctx_r2.selectIndex && (ctx_r2.type == \"donors\" && (ctx_r2.patient == null ? null : ctx_r2.patient.length) <= 1 || ctx_r2.type == \"patient\" && ctx_r2.subjects.length <= 1) ? \"#f3f7d4\" : i_r7 % 2 ? \"white\" : \"#F1F4F6\"))(\"index\", i_r7)(\"flippedPatient\", ctx_r2.flippedPatient)(\"patient\", ctx_r2.patient)(\"subject\", subject_r6)(\"subjects\", ctx_r2.subjects)(\"matchParadigm\", \"b-leader\")(\"selectIndex\", ctx_r2.selectIndex)(\"movedPatientGenotype\", ctx_r2.movedPatientGenotype)(\"leaderMap\", ctx_r2.leaderMap);\n  }\n}\n\nfunction SubjectColumnComponent_img_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"img\", 10);\n    i0.ɵɵlistener(\"keyup.enter\", function SubjectColumnComponent_img_4_Template_img_keyup_enter_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.addSubject();\n    })(\"click\", function SubjectColumnComponent_img_4_Template_img_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.addSubject();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SubjectColumnComponent_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" There is a limit of \", ctx_r14.limit, \". \");\n  }\n}\n\nfunction SubjectColumnComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, SubjectColumnComponent_div_5_div_1_Template, 2, 1, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.type == \"donors\" == ctx_r4.subjects.length >= ctx_r4.limit);\n  }\n}\n\nfunction SubjectColumnComponent_app_patient_panel_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-patient-panel\", 13);\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"selected\", ctx_r5.selected)(\"donors\", ctx_r5.donors)(\"subjects\", ctx_r5.subjects);\n  }\n}\n\nconst _c2 = function (a0) {\n  return {\n    \"multiple-patients\": a0\n  };\n};\n\nexport let SubjectColumnComponent = /*#__PURE__*/(() => {\n  class SubjectColumnComponent {\n    constructor(subjectsService, importService) {\n      this.subjectsService = subjectsService;\n      this.importService = importService;\n      this.notifyMovedPatientGenotype = new EventEmitter();\n      this.deletedSubject = new EventEmitter();\n      this.changeRow = new EventEmitter();\n      this.selectIndex = 0;\n    }\n\n    ngOnInit() {\n      this.limit = this.importService.getLimit();\n    }\n\n    updateScroll(position) {\n      if (this.contentView) {\n        this.contentView.nativeElement.scrollTop = position;\n      } // this.contentView.nativeElement.scrollTop = position;\n\n    }\n\n    ngAfterViewInit() {// console.log(this.elementView);\n      // this.contentHeight = this.elementView.nativeElement.offsetHeight;\n    }\n\n    addSubject() {\n      this.subjectsService.addEmptySubjects(this.subjects, this.subjects[0].type, 1);\n    }\n\n    emitMovedPatientGenotype($event) {\n      this.notifyMovedPatientGenotype.emit($event);\n    }\n\n    removeSubject($event) {\n      this.deletedSubject.emit(this.subjectsService.removeSubject(this.subjects, $event));\n    }\n\n    onScroll(event) {\n      const rowHeight = 81;\n      const scrollPos = event.target['scrollTop'];\n      const selectIndex = Math.round(scrollPos / rowHeight);\n\n      if (this.selectIndex != selectIndex) {\n        this.selectIndex = selectIndex;\n        this.changeRow.emit(this.selectIndex);\n      } // if (event.target['scrollTop'] % rowHeight == 0){\n      // }\n\n    }\n\n  }\n\n  SubjectColumnComponent.ɵfac = function SubjectColumnComponent_Factory(t) {\n    return new (t || SubjectColumnComponent)(i0.ɵɵdirectiveInject(i1.SubjectsService), i0.ɵɵdirectiveInject(i2.ImportService));\n  };\n\n  SubjectColumnComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SubjectColumnComponent,\n    selectors: [[\"app-subject-column\"]],\n    viewQuery: function SubjectColumnComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(SubjectRowComponent, 5);\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.elementView = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentView = _t.first);\n      }\n    },\n    inputs: {\n      patient: \"patient\",\n      donors: \"donors\",\n      subjects: \"subjects\",\n      leaderMap: \"leaderMap\",\n      flippedPatient: \"flippedPatient\",\n      movedPatientGenotype: \"movedPatientGenotype\",\n      sorting: \"sorting\",\n      type: \"type\",\n      selected: \"selected\"\n    },\n    outputs: {\n      notifyMovedPatientGenotype: \"notifyMovedPatientGenotype\",\n      deletedSubject: \"deletedSubject\",\n      changeRow: \"changeRow\"\n    },\n    decls: 7,\n    vars: 8,\n    consts: [[\"class\", \"indicator-wrapper\", 4, \"ngIf\"], [1, \"content\", 3, \"ngClass\", \"scroll\"], [\"content\", \"\"], [3, \"ngStyle\", \"index\", \"flippedPatient\", \"patient\", \"subject\", \"subjects\", \"matchParadigm\", \"selectIndex\", \"movedPatientGenotype\", \"leaderMap\", \"notifyMovedPatientGenotype\", \"removeSubject\", 4, \"ngFor\", \"ngForOf\"], [\"src\", \"/assets/img/add-button.png\", \"tabindex\", \"2\", 3, \"keyup.enter\", \"click\", 4, \"ngIf\"], [\"class\", \"spacer\", 4, \"ngIf\"], [3, \"selected\", \"donors\", \"subjects\", 4, \"ngIf\"], [1, \"indicator-wrapper\"], [\"src\", \"/assets/img/bar-loading-indicator.gif\", 1, \"loading-indicator\"], [3, \"ngStyle\", \"index\", \"flippedPatient\", \"patient\", \"subject\", \"subjects\", \"matchParadigm\", \"selectIndex\", \"movedPatientGenotype\", \"leaderMap\", \"notifyMovedPatientGenotype\", \"removeSubject\"], [\"src\", \"/assets/img/add-button.png\", \"tabindex\", \"2\", 3, \"keyup.enter\", \"click\"], [1, \"spacer\"], [4, \"ngIf\"], [3, \"selected\", \"donors\", \"subjects\"]],\n    template: function SubjectColumnComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, SubjectColumnComponent_div_0_Template, 2, 0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1, 2);\n        i0.ɵɵlistener(\"scroll\", function SubjectColumnComponent_Template_div_scroll_1_listener($event) {\n          return ctx.onScroll($event);\n        });\n        i0.ɵɵtemplate(3, SubjectColumnComponent_app_subject_row_3_Template, 1, 12, \"app-subject-row\", 3);\n        i0.ɵɵtemplate(4, SubjectColumnComponent_img_4_Template, 1, 0, \"img\", 4);\n        i0.ɵɵtemplate(5, SubjectColumnComponent_div_5_Template, 2, 1, \"div\", 5);\n        i0.ɵɵtemplate(6, SubjectColumnComponent_app_patient_panel_6_Template, 1, 3, \"app-patient-panel\", 6);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.sorting && ctx.subjects[0].type == \"donor\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c2, ctx.type == \"patient\" && ctx.subjects.length > 1));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.subjects.slice(0, ctx.limit));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.type == \"donors\" || ctx.type == \"patient\" && ctx.subjects.length > 1) && ctx.subjects.length < ctx.limit);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.type == \"donors\" || ctx.type == \"patient\" && ctx.subjects.length > 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.type == \"patient\" && ctx.subjects.length <= 1);\n      }\n    },\n    directives: [i3.NgIf, i3.NgClass, i3.NgForOf, i4.SubjectRowComponent, i3.NgStyle, i5.PatientPanelComponent],\n    styles: [\"[_nghost-%COMP%]{float:left;overflow:hidden}.patient[_nghost-%COMP%]{min-width:310px;width:30.6%;z-index:1;border-left:1px solid #9AA3A8}.donors[_nghost-%COMP%]{width:49%;min-width:440px;border-left:1px solid #9AA3A8;border-right:1px solid #9AA3A8;z-index:0;position:relative;overflow:hidden}.multiple-patients[_nghost-%COMP%]{min-width:425px}.single-patient[_nghost-%COMP%]{height:100%}img[_ngcontent-%COMP%]{margin:20px}.spacer[_ngcontent-%COMP%]{height:calc(100vh - 30px);float:left;width:100%;text-align:center;color:gray;font-size:10px;margin-top:30px}.content[_ngcontent-%COMP%]{height:100%;overflow:scroll;float:left;width:100%;scroll-behavior:smooth}.donors[_nghost-%COMP%]   .content[_ngcontent-%COMP%]{scroll-snap-type:y mandatory;overflow-x:hidden}.multiple-patients[_nghost-%COMP%]   .content[_ngcontent-%COMP%]{overflow-y:hidden}.content[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{scroll-snap-align:start}.indicator-wrapper[_ngcontent-%COMP%]{background-color:#fff;margin:0;opacity:.85;width:100%;height:100%;position:absolute;left:0;z-index:2;text-align:center}.loading-indicator[_ngcontent-%COMP%]{margin:10vh auto}\"]\n  });\n  return SubjectColumnComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}