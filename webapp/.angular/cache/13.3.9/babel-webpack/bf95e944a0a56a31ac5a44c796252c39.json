{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/core/services/bleader/leaderMap/leader-map.service\";\nimport * as i2 from \"@app/core/services/subjects/subjects.service\";\nimport * as i3 from \"../control-panel/control-panel.component\";\nimport * as i4 from \"../subject-header/subject-header.component\";\nimport * as i5 from \"../subject-column/subject-column.component\";\nimport * as i6 from \"@angular/common\";\n\nconst _c0 = function (a0) {\n  return {\n    \"single-patient\": a0\n  };\n};\n\nconst _c1 = function (a0, a1) {\n  return {\n    \"single-patient\": a0,\n    \"multiple-patients\": a1\n  };\n};\n\nexport let SubjectsComponent = /*#__PURE__*/(() => {\n  class SubjectsComponent {\n    constructor(leaderMapService, subjectsService) {\n      this.leaderMapService = leaderMapService;\n      this.subjectsService = subjectsService;\n      this.patient = [];\n      this.donors = [];\n      this.deletedSubjects = [];\n      this.selected = 0;\n      this.flippedPatient = false;\n      this.movedPatientGenotype = false;\n      this.leaderMap = this.leaderMapService.getLeaderMap();\n    }\n\n    ngOnInit() {\n      this.subjectsService.addEmptySubjects(this.patient, 'patient', 1);\n      this.subjectsService.addEmptySubjects(this.donors, 'donor', 1);\n    }\n\n    movePatientGenotype($event) {\n      this.movedPatientGenotype = $event;\n    }\n\n    stashSubject($event) {\n      this.deletedSubjects.push($event);\n    }\n\n    assignSelected(index) {\n      this.selected = index;\n    }\n\n    assignSorting($event) {\n      this.sorting = $event;\n    }\n\n  }\n\n  SubjectsComponent.ɵfac = function SubjectsComponent_Factory(t) {\n    return new (t || SubjectsComponent)(i0.ɵɵdirectiveInject(i1.LeaderMapService), i0.ɵɵdirectiveInject(i2.SubjectsService));\n  };\n\n  SubjectsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SubjectsComponent,\n    selectors: [[\"app-subjects\"]],\n    decls: 6,\n    vars: 24,\n    consts: [[3, \"patient\", \"donors\", \"deletedSubjects\", \"sorting\"], [1, \"patient\", 3, \"subjects\"], [1, \"donors\", 3, \"subjects\"], [1, \"content\"], [1, \"patient\", 3, \"subjects\", \"donors\", \"type\", \"ngClass\", \"movedPatientGenotype\", \"selected\", \"flippedPatient\", \"leaderMap\"], [1, \"donors\", 3, \"patient\", \"subjects\", \"type\", \"sorting\", \"ngClass\", \"leaderMap\", \"notifyMovedPatientGenotype\", \"deletedSubject\", \"changeRow\"]],\n    template: function SubjectsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"app-control-panel\", 0);\n        i0.ɵɵlistener(\"sorting\", function SubjectsComponent_Template_app_control_panel_sorting_0_listener($event) {\n          return ctx.assignSorting($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(1, \"app-subject-header\", 1)(2, \"app-subject-header\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelement(4, \"app-subject-column\", 4);\n        i0.ɵɵelementStart(5, \"app-subject-column\", 5);\n        i0.ɵɵlistener(\"notifyMovedPatientGenotype\", function SubjectsComponent_Template_app_subject_column_notifyMovedPatientGenotype_5_listener($event) {\n          return ctx.movePatientGenotype($event);\n        })(\"deletedSubject\", function SubjectsComponent_Template_app_subject_column_deletedSubject_5_listener($event) {\n          return ctx.stashSubject($event);\n        })(\"changeRow\", function SubjectsComponent_Template_app_subject_column_changeRow_5_listener($event) {\n          return ctx.assignSelected($event);\n        });\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"patient\", ctx.patient)(\"donors\", ctx.donors)(\"deletedSubjects\", ctx.deletedSubjects);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"subjects\", ctx.patient);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"subjects\", ctx.donors);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"subjects\", ctx.patient)(\"donors\", ctx.donors)(\"type\", \"patient\")(\"ngClass\", i0.ɵɵpureFunction1(19, _c0, ctx.patient.length <= 1))(\"movedPatientGenotype\", ctx.movedPatientGenotype)(\"selected\", ctx.selected)(\"flippedPatient\", ctx.flippedPatient)(\"leaderMap\", ctx.leaderMap);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"patient\", ctx.patient)(\"subjects\", ctx.donors)(\"type\", \"donors\")(\"sorting\", ctx.sorting)(\"ngClass\", i0.ɵɵpureFunction2(21, _c1, ctx.patient.length <= 1, ctx.patient.length > 1))(\"leaderMap\", ctx.leaderMap);\n      }\n    },\n    directives: [i3.ControlPanelComponent, i4.SubjectHeaderComponent, i5.SubjectColumnComponent, i6.NgClass],\n    styles: [\"[_nghost-%COMP%]{min-height:300px;height:95vh;padding:0 40px 20px;min-width:753px;max-width:753px;margin:0px calc(50vw - 425px);float:left}.content[_ngcontent-%COMP%]{float:left;width:100%;height:calc(95vh - 139px);overflow:auto;border-bottom:1px solid #9AA3A8;scroll-snap-type:y mandatory;scroll-snap-points-y:repeat(81px)}\"]\n  });\n  return SubjectsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}