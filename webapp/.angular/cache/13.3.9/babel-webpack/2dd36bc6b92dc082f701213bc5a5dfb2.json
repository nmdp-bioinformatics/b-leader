{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/core/services/import/import.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/progress-bar\";\n\nfunction ProgressBarComponent_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\")(1, \"i\");\n    i0.ɵɵtext(2, \"Press export to finish the rest of the calculations. An annotated file will download at completion.\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport let ProgressBarComponent = /*#__PURE__*/(() => {\n  class ProgressBarComponent {\n    constructor(importService) {\n      this.importService = importService;\n      this.alerted = false;\n    }\n\n    ngOnInit() {\n      this.limit = this.importService.getLimit();\n    }\n\n    donorsAnnotated() {\n      let numDonorsAnnotated = this.donors.filter(d => d.annotated).length;\n\n      if (numDonorsAnnotated == this.limit && numDonorsAnnotated < this.donors.length && !this.alerted) {\n        alert(\"Press export to finish the rest of the calculations. An annotated file will download at completion.\");\n        this.alerted = true;\n      }\n\n      return numDonorsAnnotated;\n    }\n\n    calculateProgress() {\n      return this.donorsAnnotated() / this.donors.length * 100;\n    }\n\n  }\n\n  ProgressBarComponent.ɵfac = function ProgressBarComponent_Factory(t) {\n    return new (t || ProgressBarComponent)(i0.ɵɵdirectiveInject(i1.ImportService));\n  };\n\n  ProgressBarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProgressBarComponent,\n    selectors: [[\"app-progress-bar\"]],\n    inputs: {\n      donors: \"donors\"\n    },\n    decls: 4,\n    vars: 4,\n    consts: [[1, \"stats\"], [4, \"ngIf\"], [\"mode\", \"determinate\", 3, \"value\"]],\n    template: function ProgressBarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, ProgressBarComponent_span_1_Template, 3, 0, \"span\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"mat-progress-bar\", 2);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.donorsAnnotated() == ctx.limit && ctx.donorsAnnotated() < ctx.donors.length);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate2(\" \", ctx.donorsAnnotated(), \" / \", ctx.donors.length, \"\\n\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.calculateProgress());\n      }\n    },\n    directives: [i2.NgIf, i3.MatProgressBar],\n    styles: [\"html[_ngcontent-%COMP%]{font-family:Arial;overflow-x:hidden}.T[_ngcontent-%COMP%]{border:1px solid #ffcb88;background-color:#fff;color:#000}.M[_ngcontent-%COMP%]{border:1px solid #9c5494;background-color:#fff;color:#000}.X[_ngcontent-%COMP%]{background-color:gray}h1[_ngcontent-%COMP%]{font-family:Arial;font-size:36}button[_ngcontent-%COMP%]{background-color:#0077c5;color:#fff}button[_ngcontent-%COMP%]:hover{background-color:#2e9ddf}[_nghost-%COMP%]{font-size:12px}.stats[_ngcontent-%COMP%]{float:right}.stats[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:red}  .mat-progress-bar-buffer{background-color:#2e9ddf}  .mat-progress-bar{background-color:#bccc2a}  .mat-progress-bar-fill:after{background-color:#d2df58}\"]\n  });\n  return ProgressBarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}